;suppress inspection "SpellCheckingInspection" for whole file
[options]
# Database related options

# specify the database user name (default: False)
db_user = $ODOO_DB_USER

# specify the database password (default: False)
db_password = $ODOO_DB_PASSWORD

# specify the database host (default: False)
db_host = $ODOO_DB_HOST

# specify the database name (default: False)
db_name = $ODOO_DB_NAME

# specify the database port (default: False)
db_port = $ODOO_DB_PORT

# specify the database ssl connection mode (see PostgreSQLSQL documentation) (default: prefer)
; db_sslmode = $ODOO_DB_SSLMODE

# specify the maximum number of physical connections to PostgreSQL (default: 64)
; db_maxconn = $ODOO_DB_MAXCONN

# specify the maximum number of physical connections to PostgreSQL specifically for the gevent worker (default: False)
; db_maxconn_gevent = $ODOO_DB_MAXCONN_GEVENT

# specify a custom database template to create a new database (default: template0)
; db_template = $ODOO_DB_TEMPLATE

# specify the pg executable path (default: None)
; pg_path = $ODOO_PG_PATH

# specify the replica host. Specify an empty db_replica_host to use the default unix socket. (default: False)
; db_replica_host = $ODOO_DB_REPLICA_HOST

# specify the replica port (default: False)
; db_replica_port = $ODOO_DB_REPLICA_PORT


# Common options

# specify alternate config file (default: None)
; config = $ODOO_CONFIG

# Comma-separated list of server-wide modules. (default: base,web)
server_wide_modules = $ODOO_SERVER_WIDE_MODULES

# Directory where to store Odoo data (default: /var/lib/odoo)
data_dir = $ODOO_DATA_DIR

# specify additional addons paths (separated by commas). (default: None)
addons_path = $ODOO_ADDONS_PATH

# disable loading demo data for modules to be installed (comma-separated, use "all" for all modules). Requires -d and -i. Default is %default (default: False)
without_demo = ${ODOO_WITHOUT_DEMO:-all}

# save configuration to ~/.odoorc (or to ~/.openerp_serverrc if it exists) (default: False)
; save = $ODOO_SAVE

# install one or more modules (comma-separated list, use "all" for all modules), requires -d (default: None)
; init = $ODOO_INIT

# update one or more modules (comma-separated list, use "all" for all modules). Requires -d. (default: None)
update = $ODOO_UPDATE

# Use this for big data importation, if it crashes you will be able to continue at the current state. Provide a filename to store intermediate importation states. (default: '')
; import_partial = $ODOO_IMPORT_PARTIAL

# file where the server pid will be stored (default: None)
; pidfile = $ODOO_PIDFILE

# specify an additional upgrade path. (default: None)
; upgrade_path = $ODOO_UPGRADE_PATH


# HTTP Service Configuration

# Activate reverse proxy WSGI wrappers (headers rewriting). Only enable this when running behind a trusted web proxy! (default: False)
proxy_mode = $ODOO_PROXY_MODE

# Listen interface address for HTTP services. Keep empty to listen on all interfaces (0.0.0.0) (default: '')
; http_interface = $ODOO_HTTP_INTERFACE

# Listen port for the main HTTP service (default: 8069)
; http_port = $ODOO_HTTP_PORT

# Listen port for the gevent worker (default: 8072)
; gevent_port = $ODOO_GEVENT_PORT

# Disable the HTTP and Longpolling services entirely (default: True)
; http_enable = $ODOO_HTTP_ENABLE

# Activate X-Sendfile (apache) and X-Accel-Redirect (nginx) HTTP response header to delegate the delivery of large files (default: False)
; x_sendfile = $ODOO_X_SENDFILE


# Web interface Configuration

# Regular expressions for filtering available databases for Web UI. The expression can use %d (domain) and %h (host) placeholders. (default: '')
; dbfilter = $ODOO_DBFILTER


# Testing Configuration

# Launch a python test file. (default: False)
; test_file = $ODOO_TEST_FILE

# Enable unit tests. (default: None)
; test_enable = $ODOO_TEST_ENABLE

# Comma-separated list of specs to filter which tests to execute. Enable unit tests if set. (default: None)
; test_tags = $ODOO_TEST_TAGS

# Screencasts will go in DIR/{db_name}/screencasts. (default: None)
; screencasts = $ODOO_SCREENCASTS

# Screenshots will go in DIR/{db_name}/screenshots. Defaults to /tmp/odoo_tests. (default: /tmp/odoo_tests)
; screenshots = $ODOO_SCREENSHOTS


# Logging Configuration

# file where the server log will be stored (default: None)
; logfile = $ODOO_LOGFILE

# Send the log to the syslog server (default: False)
; syslog = $ODOO_SYSLOG

# setup a handler at LEVEL for a given PREFIX. Example: "odoo.orm:DEBUG" or "werkzeug:CRITICAL" (default: ":INFO")
; log_handler = $ODOO_LOG_HANDLER

# Logging database (default: False)
; log_db = $ODOO_LOG_DB

# Logging database level (default: warning)
; log_db_level = $ODOO_LOG_DB_LEVEL

# specify the level of the logging. Accepted values: ['info', 'debug_rpc', 'warn', 'test', 'critical', 'runbot', 'debug_sql', 'error', 'debug', 'debug_rpc_answer', 'notset']. (default: info)
log_level = $ODOO_LOG_LEVEL


# SMTP Configuration

# specify the SMTP email address for sending email (default: False)
; email_from = $ODOO_EMAIL_FROM

# specify for which email address the SMTP configuration can be used (default: False)
; from_filter = $ODOO_FROM_FILTER

# specify the SMTP server for sending email (default: localhost)
; smtp_server = $ODOO_SMTP_SERVER

# specify the SMTP port (default: 25)
; smtp_port = $ODOO_SMTP_PORT

# if passed, SMTP connections will be encrypted with SSL (STARTTLS) (default: False)
; smtp_ssl = $ODOO_SMTP_SSL

# specify the SMTP username for sending email (default: False)
; smtp_user = $ODOO_SMTP_USER

# specify the SMTP password for sending email (default: False)
; smtp_password = $ODOO_SMTP_PASSWORD

# specify the SSL certificate used for authentication (default: False)
; smtp_ssl_certificate_filename = $ODOO_SMTP_SSL_CERTIFICATE_FILENAME

# specify the SSL private key used for authentication (default: False)
; smtp_ssl_private_key_filename = $ODOO_SMTP_SSL_PRIVATE_KEY_FILENAME


# Internationalisation options

# specifies the languages for the translations you want to be loaded (default: None)
; load_language = $ODOO_LOAD_LANGUAGE

# specify the language of the translation file. Use it with --i18n-export or --i18n-import (default: None)
; language = $ODOO_LANGUAGE

# export all sentences to be translated to a CSV file, a PO file or a TGZ archive and exit (default: None)
; translate_out = $ODOO_TRANSLATE_OUT

# import a CSV or a PO file with translations and exit. The '-l' option is required. (default: None)
; translate_in = $ODOO_TRANSLATE_IN

# overwrites existing translation terms on updating a module or importing a CSV or a PO file. (default: False)
; overwrite_existing_translations = $ODOO_OVERWRITE_EXISTING_TRANSLATIONS

# specify modules to export. Use in combination with --i18n-export (default: None)
; translate_modules = $ODOO_TRANSLATE_MODULES


# Security-related options

# Disable the ability to obtain or view the list of databases. Also disable access to the database manager and selector (default: True)
; list_db = $ODOO_LIST_DB


# Advanced options

# Enable developer mode. Param: List of options separated by comma. 'all' => reload,qweb,xml (default: None)
dev_mode = $ODOO_DEV_MODE

# Specify a preferred REPL to use in shell mode. [ipython|ptpython|bpython|python] (default: None)
; shell_interface = $ODOO_SHELL_INTERFACE

# stop the server after its initialization (default: False)
; stop_after_init = $ODOO_STOP_AFTER_INIT

# Force a limit on the maximum number of records kept in the virtual osv_memory tables (default: 0)
; osv_memory_count_limit = $ODOO_OSV_MEMORY_COUNT_LIMIT

# Time limit (decimal value in hours) records created with a TransientModel (mostly wizard) are kept in the database. Default to 1 hour. (default: 1.0)
; transient_age_limit = $ODOO_TRANSIENT_AGE_LIMIT

# Maximum number of threads processing concurrently cron jobs (default 2). (default: 2)
; max_cron_threads = $ODOO_MAX_CRON_THREADS

# Maximum time a cron thread/worker stays alive before it is restarted. Set to 0 to disable. (default: 0)
; limit_time_worker_cron = $ODOO_LIMIT_TIME_WORKER_CRON

# Try to enable the unaccent extension when creating new databases. (default: False)
; unaccent = $ODOO_UNACCENT

# Absolute path to the GeoIP City database file. (default: /usr/share/GeoIP/GeoLite2-City.mmdb)
; geoip_city_db = $ODOO_GEOIP_CITY_DB

# Absolute path to the GeoIP Country database file. (default: /usr/share/GeoIP/GeoLite2-Country.mmdb)
; geoip_country_db = $ODOO_GEOIP_COUNTRY_DB


# Multiprocessing options (POSIX only)

# Specify the number of workers, 0 disable prefork mode. (default: 0)
workers = $ODOO_WORKERS

# Maximum allowed virtual memory per worker (in bytes), when reached the worker will be reset after the current request (default 2048MiB). (default: 2147483648)
limit_memory_soft = $ODOO_LIMIT_MEMORY_SOFT

# Maximum allowed virtual memory per gevent worker (in bytes), when reached the worker will be reset after the current request. Defaults to `--limit-memory-soft`. (default: False)
; limit_memory_soft_gevent = $ODOO_LIMIT_MEMORY_SOFT_GEVENT

# Maximum allowed virtual memory per worker (in bytes), when reached, any memory allocation will fail (default 2560MiB). (default: 2684354560)
limit_memory_hard = $ODOO_LIMIT_MEMORY_HARD

# Maximum allowed virtual memory per gevent worker (in bytes), when reached, any memory allocation will fail. Defaults to `--limit-memory-hard`. (default: False)
; limit_memory_hard_gevent = $ODOO_LIMIT_MEMORY_HARD_GEVENT

# Maximum allowed CPU time per request (default 60). (default: 60)
limit_time_cpu = $ODOO_LIMIT_TIME_CPU

# Maximum allowed Real time per request (default 120). (default: 120)
limit_time_real = $ODOO_LIMIT_TIME_REAL

# Maximum allowed Real time per cron job. (default: --limit-time-real). Set to 0 for no limit. (default: -1)
limit_time_worker_cron = $ODOO_LIMIT_TIME_WORKER_CRON

# Maximum number of request to be processed per worker (default 65536). (default: 65536)
; limit_request = $ODOO_LIMIT_REQUEST
